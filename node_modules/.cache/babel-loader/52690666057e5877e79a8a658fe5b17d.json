{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\(S)samsungFLEX5\\\\Desktop\\\\hw4_login\\\\src\\\\pages\\\\game\\\\components\\\\Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport TimerStyle from './Timer.style';\nimport timerConfig from '../../../constants/timerConfig';\nimport GamePlayContext from '../GamePlay/GamePlay.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nTimer.propTypes = {\n  isTimerGetReady: PropTypes.bool.isRequired,\n  endTime: PropTypes.number.isRequired\n};\n\nconst getRemainTime = endTime => {\n  const gap = Math.floor((endTime - Date.now()) / 1000);\n  return gap >= 0 ? gap : 0;\n};\n\nexport default function Timer(_ref) {\n  _s();\n\n  let {\n    isTimerGetReady,\n    endTime\n  } = _ref;\n  const {\n    gameStateDispatch\n  } = useContext(GamePlayContext);\n  const [remainTime, setRemainTime] = useState(getRemainTime(endTime));\n  const requestId = useRef(0);\n  useEffect(() => {\n    const resetTimer = () => {\n      setRemainTime(getRemainTime(Date.now() + timerConfig.defaultExpireTime));\n    };\n\n    const countDown = () => {\n      setRemainTime(getRemainTime(endTime));\n      if (getRemainTime(endTime) <= 10) gameStateDispatch({\n        type: 'setIsLetterOpen',\n        isLetterOpen: true\n      });\n      if (isTimerGetReady) requestId.current = requestAnimationFrame(countDown);\n    };\n\n    if (isTimerGetReady) requestId.current = requestAnimationFrame(countDown);else resetTimer();\n    return () => {\n      cancelAnimationFrame(requestId.current);\n    };\n  }, [endTime, isTimerGetReady, gameStateDispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TimerStyle, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: remainTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Timer, \"cfc2D7VwC8zG5CSQnZNtbQONl6A=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","PropTypes","TimerStyle","timerConfig","GamePlayContext","Timer","propTypes","isTimerGetReady","bool","isRequired","endTime","number","getRemainTime","gap","Math","floor","Date","now","gameStateDispatch","remainTime","setRemainTime","requestId","resetTimer","defaultExpireTime","countDown","type","isLetterOpen","current","requestAnimationFrame","cancelAnimationFrame"],"sources":["C:/Users/(S)samsungFLEX5/Desktop/hw4_login/src/pages/game/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TimerStyle from './Timer.style';\r\nimport timerConfig from '../../../constants/timerConfig';\r\nimport GamePlayContext from '../GamePlay/GamePlay.context';\r\n\r\nTimer.propTypes = {\r\n  isTimerGetReady: PropTypes.bool.isRequired,\r\n  endTime: PropTypes.number.isRequired,\r\n};\r\n\r\nconst getRemainTime = (endTime) => {\r\n  const gap = Math.floor((endTime - Date.now()) / 1000);\r\n  return gap >= 0 ? gap : 0;\r\n};\r\n\r\nexport default function Timer({ isTimerGetReady, endTime }) {\r\n  const { gameStateDispatch } = useContext(GamePlayContext);\r\n  const [remainTime, setRemainTime] = useState(getRemainTime(endTime));\r\n  const requestId = useRef(0);\r\n\r\n  useEffect(() => {\r\n    const resetTimer = () => {\r\n      setRemainTime(getRemainTime(Date.now() + timerConfig.defaultExpireTime));\r\n    };\r\n\r\n    const countDown = () => {\r\n      setRemainTime(getRemainTime(endTime));\r\n      if (getRemainTime(endTime) <= 10)\r\n        gameStateDispatch({ type: 'setIsLetterOpen', isLetterOpen: true });\r\n      if (isTimerGetReady) requestId.current = requestAnimationFrame(countDown);\r\n    };\r\n\r\n    if (isTimerGetReady) requestId.current = requestAnimationFrame(countDown);\r\n    else resetTimer();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(requestId.current);\r\n    };\r\n  }, [endTime, isTimerGetReady, gameStateDispatch]);\r\n\r\n  return (\r\n    <>\r\n      <TimerStyle>\r\n        <span>{remainTime}</span>\r\n      </TimerStyle>\r\n    </>\r\n  );\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;;AAEAC,KAAK,CAACC,SAAN,GAAkB;EAChBC,eAAe,EAAEN,SAAS,CAACO,IAAV,CAAeC,UADhB;EAEhBC,OAAO,EAAET,SAAS,CAACU,MAAV,CAAiBF;AAFV,CAAlB;;AAKA,MAAMG,aAAa,GAAIF,OAAD,IAAa;EACjC,MAAMG,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACL,OAAO,GAAGM,IAAI,CAACC,GAAL,EAAX,IAAyB,IAApC,CAAZ;EACA,OAAOJ,GAAG,IAAI,CAAP,GAAWA,GAAX,GAAiB,CAAxB;AACD,CAHD;;AAKA,eAAe,SAASR,KAAT,OAA6C;EAAA;;EAAA,IAA9B;IAAEE,eAAF;IAAmBG;EAAnB,CAA8B;EAC1D,MAAM;IAAEQ;EAAF,IAAwBlB,UAAU,CAACI,eAAD,CAAxC;EACA,MAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAACe,aAAa,CAACF,OAAD,CAAd,CAA5C;EACA,MAAMW,SAAS,GAAGtB,MAAM,CAAC,CAAD,CAAxB;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMwB,UAAU,GAAG,MAAM;MACvBF,aAAa,CAACR,aAAa,CAACI,IAAI,CAACC,GAAL,KAAad,WAAW,CAACoB,iBAA1B,CAAd,CAAb;IACD,CAFD;;IAIA,MAAMC,SAAS,GAAG,MAAM;MACtBJ,aAAa,CAACR,aAAa,CAACF,OAAD,CAAd,CAAb;MACA,IAAIE,aAAa,CAACF,OAAD,CAAb,IAA0B,EAA9B,EACEQ,iBAAiB,CAAC;QAAEO,IAAI,EAAE,iBAAR;QAA2BC,YAAY,EAAE;MAAzC,CAAD,CAAjB;MACF,IAAInB,eAAJ,EAAqBc,SAAS,CAACM,OAAV,GAAoBC,qBAAqB,CAACJ,SAAD,CAAzC;IACtB,CALD;;IAOA,IAAIjB,eAAJ,EAAqBc,SAAS,CAACM,OAAV,GAAoBC,qBAAqB,CAACJ,SAAD,CAAzC,CAArB,KACKF,UAAU;IAEf,OAAO,MAAM;MACXO,oBAAoB,CAACR,SAAS,CAACM,OAAX,CAApB;IACD,CAFD;EAGD,CAlBQ,EAkBN,CAACjB,OAAD,EAAUH,eAAV,EAA2BW,iBAA3B,CAlBM,CAAT;EAoBA,oBACE;IAAA,uBACE,QAAC,UAAD;MAAA,uBACE;QAAA,UAAOC;MAAP;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAOD;;GAhCuBd,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}