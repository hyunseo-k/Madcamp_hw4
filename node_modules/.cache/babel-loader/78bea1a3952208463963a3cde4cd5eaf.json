{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\(S)samsungFLEX5\\\\Desktop\\\\hw4_login\\\\src\\\\pages\\\\game\\\\components\\\\Info.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Info = () => {\n  _s();\n\n  const [seconds, setSeconds] = useState(60); // 가상의 플레이어 정보 데이터 (예시로 만들어짐)\n\n  useEffect(() => {\n    // 컴포넌트가 마운트될 때 타이머를 시작합니다.\n    const timer = setInterval(() => {\n      setSeconds(prevSeconds => {\n        // 이전 초(second) 값을 감소시킵니다.\n        if (prevSeconds > 0) {\n          return prevSeconds - 1;\n        } else {\n          // 초(second)가 0이 되면 타이머를 멈춥니다.\n          clearInterval(timer);\n          return prevSeconds;\n        }\n      });\n    }, 1000); // 컴포넌트가 언마운트되면 타이머를 정리합니다.\n\n    return () => clearInterval(timer);\n  }, []);\n  const player1 = {\n    name: \"플레이어 1\",\n    score: 20,\n    isCurrentPlayer: true // 현재 플레이어인지 여부 (true면 플레이어 1이 현재 플레이어)\n\n  };\n  const player2 = {\n    name: \"플레이어 2\",\n    score: 15,\n    isCurrentPlayer: false // 현재 플레이어인지 여부 (false면 플레이어 2가 현재 플레이어)\n\n  }; // 각 플레이어에 대한 정보를 표시하기 위한 state\n\n  const [players, setPlayers] = useState([player1, player2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-2 px-2\",\n    style: {\n      background: \"#FFF\",\n      borderRadius: \"10px\",\n      fontSize: \"24px\"\n    },\n    children: [players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${player.isCurrentPlayer ? \"border border-dark border-3\" : \"\"} py-2 px-3 mb-2`,\n      style: {\n        borderRadius: \"10px\",\n        borderColor: player.isCurrentPlayer ? \"#000000\" : \"\",\n        // 현재 플레이어일 때 윤곽선 색상 변경\n        backgroundColor: player.isCurrentPlayer ? \"#7AB2CF\" : \"\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"fw-bold\",\n        children: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", player.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, player.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Info, \"UefW67u9/IRTiKPxsSNtNt2+0e0=\");\n\n_c = Info;\nexport default Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useEffect","useState","Info","seconds","setSeconds","timer","setInterval","prevSeconds","clearInterval","player1","name","score","isCurrentPlayer","player2","players","setPlayers","background","borderRadius","fontSize","map","player","borderColor","backgroundColor"],"sources":["C:/Users/(S)samsungFLEX5/Desktop/hw4_login/src/pages/game/components/Info.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Info = () => {\r\n  const [seconds, setSeconds] = useState(60);\r\n  // 가상의 플레이어 정보 데이터 (예시로 만들어짐)\r\n\r\n  useEffect(() => {\r\n    // 컴포넌트가 마운트될 때 타이머를 시작합니다.\r\n    const timer = setInterval(() => {\r\n      setSeconds((prevSeconds) => {\r\n        // 이전 초(second) 값을 감소시킵니다.\r\n        if (prevSeconds > 0) {\r\n          return prevSeconds - 1;\r\n        } else {\r\n          // 초(second)가 0이 되면 타이머를 멈춥니다.\r\n          clearInterval(timer);\r\n          return prevSeconds;\r\n        }\r\n      });\r\n    }, 1000);\r\n\r\n    // 컴포넌트가 언마운트되면 타이머를 정리합니다.\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n\r\n  const player1 = {\r\n    name: \"플레이어 1\",\r\n    score: 20,\r\n    isCurrentPlayer: true, // 현재 플레이어인지 여부 (true면 플레이어 1이 현재 플레이어)\r\n  };\r\n\r\n  const player2 = {\r\n    name: \"플레이어 2\",\r\n    score: 15,\r\n    isCurrentPlayer: false, // 현재 플레이어인지 여부 (false면 플레이어 2가 현재 플레이어)\r\n  };\r\n\r\n  // 각 플레이어에 대한 정보를 표시하기 위한 state\r\n  const [players, setPlayers] = useState([player1, player2]);\r\n\r\n  return (\r\n    <div\r\n      className=\"py-2 px-2\"\r\n      style={{\r\n        background: \"#FFF\",\r\n        borderRadius: \"10px\",\r\n        fontSize: \"24px\"\r\n      }}\r\n    >\r\n      {players.map((player) => (\r\n        <div\r\n          key={player.name}\r\n          className={`${\r\n            player.isCurrentPlayer ? \"border border-dark border-3\" : \"\"\r\n          } py-2 px-3 mb-2`}\r\n          style={{\r\n            borderRadius: \"10px\",\r\n            borderColor: player.isCurrentPlayer ? \"#000000\" : \"\", // 현재 플레이어일 때 윤곽선 색상 변경\r\n            backgroundColor: player.isCurrentPlayer ? \"#7AB2CF\" : \"\"\r\n          }}\r\n        >\r\n          <h5 className=\"fw-bold\">{player.name}</h5>\r\n          <p>Score: {player.score}</p>\r\n        </div>\r\n      ))}\r\n      <div>\r\n        <h1>{seconds}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC,CADiB,CAEjB;;EAEAD,SAAS,CAAC,MAAM;IACd;IACA,MAAMK,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BF,UAAU,CAAEG,WAAD,IAAiB;QAC1B;QACA,IAAIA,WAAW,GAAG,CAAlB,EAAqB;UACnB,OAAOA,WAAW,GAAG,CAArB;QACD,CAFD,MAEO;UACL;UACAC,aAAa,CAACH,KAAD,CAAb;UACA,OAAOE,WAAP;QACD;MACF,CATS,CAAV;IAUD,CAXwB,EAWtB,IAXsB,CAAzB,CAFc,CAed;;IACA,OAAO,MAAMC,aAAa,CAACH,KAAD,CAA1B;EACD,CAjBQ,EAiBN,EAjBM,CAAT;EAoBA,MAAMI,OAAO,GAAG;IACdC,IAAI,EAAE,QADQ;IAEdC,KAAK,EAAE,EAFO;IAGdC,eAAe,EAAE,IAHH,CAGS;;EAHT,CAAhB;EAMA,MAAMC,OAAO,GAAG;IACdH,IAAI,EAAE,QADQ;IAEdC,KAAK,EAAE,EAFO;IAGdC,eAAe,EAAE,KAHH,CAGU;;EAHV,CAAhB,CA9BiB,CAoCjB;;EACA,MAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAACQ,OAAD,EAAUI,OAAV,CAAD,CAAtC;EAEA,oBACE;IACE,SAAS,EAAC,WADZ;IAEE,KAAK,EAAE;MACLG,UAAU,EAAE,MADP;MAELC,YAAY,EAAE,MAFT;MAGLC,QAAQ,EAAE;IAHL,CAFT;IAAA,WAQGJ,OAAO,CAACK,GAAR,CAAaC,MAAD,iBACX;MAEE,SAAS,EAAG,GACVA,MAAM,CAACR,eAAP,GAAyB,6BAAzB,GAAyD,EAC1D,iBAJH;MAKE,KAAK,EAAE;QACLK,YAAY,EAAE,MADT;QAELI,WAAW,EAAED,MAAM,CAACR,eAAP,GAAyB,SAAzB,GAAqC,EAF7C;QAEiD;QACtDU,eAAe,EAAEF,MAAM,CAACR,eAAP,GAAyB,SAAzB,GAAqC;MAHjD,CALT;MAAA,wBAWE;QAAI,SAAS,EAAC,SAAd;QAAA,UAAyBQ,MAAM,CAACV;MAAhC;QAAA;QAAA;QAAA;MAAA,QAXF,eAYE;QAAA,sBAAWU,MAAM,CAACT,KAAlB;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA,GACOS,MAAM,CAACV,IADd;MAAA;MAAA;MAAA;IAAA,QADD,CARH,eAwBE;MAAA,uBACE;QAAA,UAAKP;MAAL;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAxBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CArED;;GAAMD,I;;KAAAA,I;AAuEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}