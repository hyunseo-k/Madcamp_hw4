{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\(S)samsungFLEX5\\\\Desktop\\\\hw4_login\\\\src\\\\pages\\\\game\\\\components\\\\Info.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Info = () => {\n  _s();\n  const [seconds, setSeconds] = useState(60);\n  // 가상의 플레이어 정보 데이터 (예시로 만들어짐)\n\n  useEffect(() => {\n    // 컴포넌트가 마운트될 때 타이머를 시작합니다.\n    const timer = setInterval(() => {\n      setSeconds(prevSeconds => {\n        // 이전 초(second) 값을 감소시킵니다.\n        if (prevSeconds > 0) {\n          return prevSeconds - 1;\n        } else {\n          // 초(second)가 0이 되면 타이머를 멈춥니다.\n          clearInterval(timer);\n          return prevSeconds;\n        }\n      });\n    }, 1000);\n\n    // 컴포넌트가 언마운트되면 타이머를 정리합니다.\n    return () => clearInterval(timer);\n  }, []);\n  const player1 = {\n    name: \"플레이어 1\",\n    score: 20,\n    isCurrentPlayer: true // 현재 플레이어인지 여부 (true면 플레이어 1이 현재 플레이어)\n  };\n\n  const player2 = {\n    name: \"플레이어 2\",\n    score: 15,\n    isCurrentPlayer: false // 현재 플레이어인지 여부 (false면 플레이어 2가 현재 플레이어)\n  };\n\n  // 각 플레이어에 대한 정보를 표시하기 위한 state\n  const [players, setPlayers] = useState([player1, player2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-2 px-2\",\n      style: {\n        background: \"#FFF\",\n        borderRadius: \"10px\",\n        fontSize: \"24px\"\n      },\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${player.isCurrentPlayer ? \"border border-dark border-3\" : \"\"} py-2 px-3 mb-2`,\n        style: {\n          borderRadius: \"10px\",\n          borderColor: player.isCurrentPlayer ? \"#000000\" : \"\",\n          // 현재 플레이어일 때 윤곽선 색상 변경\n          backgroundColor: player.isCurrentPlayer ? \"#7AB2CF\" : \"\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"fw-bold\",\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Score: \", player.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, player.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: \"\",\n        fontWeight: \"bold\",\n        backgroundImage: \"url('/img/clock.gif')\",\n        backgroundSize: \"cover\",\n        display: \"flex\",\n        // display를 flex로 지정\n        alignItems: \"center\",\n        // 위-아래 기준 가운데 정렬\n        justifyContent: \"center\",\n        // 좌-우 기준 가운데 정렬\n        color: \"black\",\n        fontSize: \"30px\",\n        width: \"70px\",\n        // 가로 크기를 지정하세요.\n        height: \"70px\" // 세로 크기를 지정하세요.\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginTop: \"7px\"\n        },\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Info, \"UefW67u9/IRTiKPxsSNtNt2+0e0=\");\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Info","_s","seconds","setSeconds","timer","setInterval","prevSeconds","clearInterval","player1","name","score","isCurrentPlayer","player2","players","setPlayers","children","className","style","background","borderRadius","fontSize","map","player","borderColor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","fontFamily","fontWeight","backgroundImage","backgroundSize","display","alignItems","justifyContent","color","width","height","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/(S)samsungFLEX5/Desktop/hw4_login/src/pages/game/components/Info.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Info = () => {\r\n  const [seconds, setSeconds] = useState(60);\r\n  // 가상의 플레이어 정보 데이터 (예시로 만들어짐)\r\n\r\n  useEffect(() => {\r\n    // 컴포넌트가 마운트될 때 타이머를 시작합니다.\r\n    const timer = setInterval(() => {\r\n      setSeconds((prevSeconds) => {\r\n        // 이전 초(second) 값을 감소시킵니다.\r\n        if (prevSeconds > 0) {\r\n          return prevSeconds - 1;\r\n        } else {\r\n          // 초(second)가 0이 되면 타이머를 멈춥니다.\r\n          clearInterval(timer);\r\n          return prevSeconds;\r\n        }\r\n      });\r\n    }, 1000);\r\n\r\n    // 컴포넌트가 언마운트되면 타이머를 정리합니다.\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n\r\n  const player1 = {\r\n    name: \"플레이어 1\",\r\n    score: 20,\r\n    isCurrentPlayer: true, // 현재 플레이어인지 여부 (true면 플레이어 1이 현재 플레이어)\r\n  };\r\n\r\n  const player2 = {\r\n    name: \"플레이어 2\",\r\n    score: 15,\r\n    isCurrentPlayer: false, // 현재 플레이어인지 여부 (false면 플레이어 2가 현재 플레이어)\r\n  };\r\n\r\n  // 각 플레이어에 대한 정보를 표시하기 위한 state\r\n  const [players, setPlayers] = useState([player1, player2]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"py-2 px-2\"\r\n        style={{\r\n          background: \"#FFF\",\r\n          borderRadius: \"10px\",\r\n          fontSize: \"24px\"\r\n        }}\r\n      >\r\n        {players.map((player) => (\r\n          <div\r\n            key={player.name}\r\n            className={`${\r\n              player.isCurrentPlayer ? \"border border-dark border-3\" : \"\"\r\n            } py-2 px-3 mb-2`}\r\n            style={{\r\n              borderRadius: \"10px\",\r\n              borderColor: player.isCurrentPlayer ? \"#000000\" : \"\", // 현재 플레이어일 때 윤곽선 색상 변경\r\n              backgroundColor: player.isCurrentPlayer ? \"#7AB2CF\" : \"\",\r\n            }}\r\n          >\r\n            <h5 className=\"fw-bold\">{player.name}</h5>\r\n            <p>Score: {player.score}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div \r\n        style={{\r\n          fontFamily: \"\",\r\n          fontWeight: \"bold\",\r\n          backgroundImage: \"url('/img/clock.gif')\",\r\n          backgroundSize: \"cover\",\r\n          display: \"flex\", // display를 flex로 지정\r\n          alignItems: \"center\", // 위-아래 기준 가운데 정렬\r\n          justifyContent: \"center\", // 좌-우 기준 가운데 정렬\r\n          color: \"black\",\r\n          fontSize: \"30px\",\r\n          width: \"70px\", // 가로 크기를 지정하세요.\r\n          height: \"70px\", // 세로 크기를 지정하세요.\r\n        }}\r\n      >\r\n        <span style={{ marginTop: \"7px\" }}>{seconds}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C;;EAEAD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BF,UAAU,CAAEG,WAAW,IAAK;QAC1B;QACA,IAAIA,WAAW,GAAG,CAAC,EAAE;UACnB,OAAOA,WAAW,GAAG,CAAC;QACxB,CAAC,MAAM;UACL;UACAC,aAAa,CAACH,KAAK,CAAC;UACpB,OAAOE,WAAW;QACpB;MACF,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMI,OAAO,GAAG;IACdC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,EAAE;IACTC,eAAe,EAAE,IAAI,CAAE;EACzB,CAAC;;EAED,MAAMC,OAAO,GAAG;IACdH,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,EAAE;IACTC,eAAe,EAAE,KAAK,CAAE;EAC1B,CAAC;;EAED;EACA,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAACW,OAAO,EAAEI,OAAO,CAAC,CAAC;EAE1D,oBACEb,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MACEiB,SAAS,EAAC,WAAW;MACrBC,KAAK,EAAE;QACLC,UAAU,EAAE,MAAM;QAClBC,YAAY,EAAE,MAAM;QACpBC,QAAQ,EAAE;MACZ,CAAE;MAAAL,QAAA,EAEDF,OAAO,CAACQ,GAAG,CAAEC,MAAM,iBAClBvB,OAAA;QAEEiB,SAAS,EAAG,GACVM,MAAM,CAACX,eAAe,GAAG,6BAA6B,GAAG,EAC1D,iBAAiB;QAClBM,KAAK,EAAE;UACLE,YAAY,EAAE,MAAM;UACpBI,WAAW,EAAED,MAAM,CAACX,eAAe,GAAG,SAAS,GAAG,EAAE;UAAE;UACtDa,eAAe,EAAEF,MAAM,CAACX,eAAe,GAAG,SAAS,GAAG;QACxD,CAAE;QAAAI,QAAA,gBAEFhB,OAAA;UAAIiB,SAAS,EAAC,SAAS;UAAAD,QAAA,EAAEO,MAAM,CAACb;QAAI;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1C7B,OAAA;UAAAgB,QAAA,GAAG,SAAO,EAACO,MAAM,CAACZ,KAAK;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAXvBN,MAAM,CAACb,IAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7B,OAAA;MACEkB,KAAK,EAAE;QACLY,UAAU,EAAE,EAAE;QACdC,UAAU,EAAE,MAAM;QAClBC,eAAe,EAAE,uBAAuB;QACxCC,cAAc,EAAE,OAAO;QACvBC,OAAO,EAAE,MAAM;QAAE;QACjBC,UAAU,EAAE,QAAQ;QAAE;QACtBC,cAAc,EAAE,QAAQ;QAAE;QAC1BC,KAAK,EAAE,OAAO;QACdhB,QAAQ,EAAE,MAAM;QAChBiB,KAAK,EAAE,MAAM;QAAE;QACfC,MAAM,EAAE,MAAM,CAAE;MAClB,CAAE;MAAAvB,QAAA,eAEFhB,OAAA;QAAMkB,KAAK,EAAE;UAAEsB,SAAS,EAAE;QAAM,CAAE;QAAAxB,QAAA,EAAEb;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CArFID,IAAI;AAAAwC,EAAA,GAAJxC,IAAI;AAuFV,eAAeA,IAAI;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}